{"version":3,"sources":["Components/Product Listing/ProductListing.module.css","Components/Order Listing/OrderListing.module.css","Common Components/Header/Header.module.css","Containers/Products/Products.module.css","Containers/Login/Login.module.css","Components/Login Form/LoginForm.module.css","Components/SignUp Form/SignUpForm.module.css","Components/Search Filter/SearchFilter.module.css","Containers/Users/Users.module.css","Components/Button Generator/ButtonGenerator.module.css","Containers/Orders/Orders.js","Components/Order Listing/OrderListing.js","Components/Product Listing/ProductListing.js","Components/ProductDetails/ProductDetails.module.css","Containers/Product Details/ProductDetail.module.css","Containers/OrderDetail/OrderDetail.module.css","Components/Order Details/OrderDetails.module.css","Containers/Orders/Orders.module.css","Components/User Listing/UserListing.module.css","Components/Button Generator/ButtonGenerator.js","Common Components/Header/Header.js","Components/Login Form/LoginForm.js","Containers/Login/Login.js","Containers/Products/Products.js","Components/User Listing/UserListing.js","Components/Search Filter/SearchFilter.js","Containers/Users/Users.js","Components/Loader/Loader.js","Utils/Common Method.js","Components/ProductDetails/ProductDetails.js","Containers/Product Details/ProductDetail.js","Components/Order Details/OrderDetails.js","Containers/OrderDetail/OrderDetail.js","App.js","Utils/API Endpoints.js","reportWebVitals.js","Reducers/OrderReducer.js","Reducers/ProductReducer.js","Reducers/UserReducer.js","Reducers/LoginReducer.js","Reducers/GlobalReducer.js","index.js"],"names":["module","exports","Orders","props","newOrders","data","filter","item","orderStatus","packedOrders","intransitOrders","deliveredOrders","handleChange","e","refinedArray","target","checked","selected","push","value","index","indexOf","splice","map","eval","updateOrders","className","classes","MainContainer","LeftSection","FilterMenuContainers","FilterMenus","toRender","length","FilterContainer","onChange","Filters","type","defaultChecked","name","RightSection","getDataFromGlobalStore","globalStore","orders","updateGlobalStoreData","dispatch","connect","updateOrder","renderOrder","order","onClick","history","selectedOrder","TableRows","RowDataEntries","id","customerName","orderDate","amount","Table","HeadingRow","TableHeadings","ProductListing","refinedProducts","product","tempArray","unFiltered","pop","selectedProduct","updateProduct","renderProducts","medicineName","medicineBrand","expiryDate","unitPrice","stock","updateLogin","preventDefault","BtnTitle","console","log","handleClick","BtnType","Header","state","active","updateActive","loginStatus","alert","innerText","toLowerCase","setState","handleLogin","localStorage","getItem","JSON","parse","undefined","LeftContainer","LogoContainer","Logo","src","alt","LogoName","MenuContainer","MenuItems","this","Active","RightContainer","React","Component","login","username","password","handleInput","LoginForm","FormInputFields","placeholder","updateLoginStatus","BtnContainer","Login","useState","SubContainer","FormSelector","handleActiveForm","FormNames","ActiveForm","FormContainer","products","updateSelected","includes","tempSelected","UserListing","user","UserAvatar","profilePic","fullName","dob","gender","currentCity","currentCountry","renderUser","users","refinedUsers","updateSearch","searchField","document","getElementsByTagName","SearchField","onKeyUp","keyCode","handleSearch","InputField","handleReset","ButtonContainer","TopSection","BottomSection","LoadingContainer","LoadingText","children","getData","URL","a","axios","get","then","response","result","ProductDetails","MainTitle","DetailsField","DetailsTitle","Details","OrderDetails","orderTime","App","monthList","date","Date","getDate","month","getMonth","year","getFullYear","expiredData","expiryYear","split","expiryMonth","Number","find","lowStock","unFilteredData","String","parseInt","lowStockData","updateProducts","updateUsers","refinedOrders","path","render","isLoaded","exact","OrderDetail","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","Global_Reducer","combineReducers","action","expired","createStore","ReactDOM","StrictMode","store","getElementById"],"mappings":"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","file":"static/js/main.9d09286b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"MainContainer\":\"ProductListing_MainContainer__1T7Pd\",\"Table\":\"ProductListing_Table__mYHiS\",\"HeadingRow\":\"ProductListing_HeadingRow__31eQf\",\"TableHeadings\":\"ProductListing_TableHeadings__jeNJv\",\"RowDataEntries\":\"ProductListing_RowDataEntries__3x0bJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MainContainer\":\"OrderListing_MainContainer__1rs1T\",\"Table\":\"OrderListing_Table__9-987\",\"HeadingRow\":\"OrderListing_HeadingRow__3XJNx\",\"TableHeadings\":\"OrderListing_TableHeadings__JfJRA\",\"RowDataEntries\":\"OrderListing_RowDataEntries__1ljBi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MainContainer\":\"Header_MainContainer__2ldo3\",\"LeftContainer\":\"Header_LeftContainer__1Jlu0\",\"Logo\":\"Header_Logo__1ZQYF\",\"LogoName\":\"Header_LogoName__1MkDk\",\"MenuContainer\":\"Header_MenuContainer__ztRFr\",\"MenuItems\":\"Header_MenuItems__3hdmQ\",\"Active\":\"Header_Active__1aAEE\",\"RightContainer\":\"Header_RightContainer__1UNQr\",\"LogoContainer\":\"Header_LogoContainer__m2ykO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MainContainer\":\"Products_MainContainer__1OUdI\",\"LeftSection\":\"Products_LeftSection__BsI8a\",\"FilterMenuContainers\":\"Products_FilterMenuContainers__148qP\",\"FilterMenus\":\"Products_FilterMenus__2XWtO\",\"Filters\":\"Products_Filters__2vd6s\",\"RightSection\":\"Products_RightSection__Opqvv\",\"FilterContainer\":\"Products_FilterContainer__1zdhR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MainContainer\":\"Login_MainContainer__AlV7h\",\"SubContainer\":\"Login_SubContainer__tCpF4\",\"FormSelector\":\"Login_FormSelector__7A9ee\",\"FormNames\":\"Login_FormNames__3i-6e\",\"FormContainer\":\"Login_FormContainer__3yHnb\",\"ActiveForm\":\"Login_ActiveForm__IxfjL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MainContainer\":\"LoginForm_MainContainer__2yI_L\",\"FormInputFields\":\"LoginForm_FormInputFields__d4lgQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MainContainer\":\"SignUpForm_MainContainer__MoSmT\",\"FormInputFields\":\"SignUpForm_FormInputFields__31n8N\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MainContainer\":\"SearchFilter_MainContainer__2tO8K\",\"SearchField\":\"SearchFilter_SearchField__1pIsE\",\"InputField\":\"SearchFilter_InputField__2QepF\",\"ButtonContainer\":\"SearchFilter_ButtonContainer__21T1W\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MainContainer\":\"Users_MainContainer__2bJ1s\",\"TopSection\":\"Users_TopSection__3Kibk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MainContainer\":\"ButtonGenerator_MainContainer__12Q-y\"};","import React from 'react'\nimport classes from './Orders.module.css'\nimport { connect } from 'react-redux'\nimport OrderListing from \"../../Components/Order Listing/OrderListing\";\n\n\nconst Orders = (props) => {\n\n    let newOrders = props.data.filter((item) => item.orderStatus == 'New')\n    let packedOrders = props.data.filter((item) => item.orderStatus == 'Packed')\n    let intransitOrders = props.data.filter((item) => item.orderStatus == 'InTransit')\n    let deliveredOrders = props.data.filter((item) => item.orderStatus == 'Delivered')\n\n    const handleChange = (e) => {\n\n        let refinedArray = []\n        if(e.target.checked) {\n            props.selected.push(e.target.value)\n        } else if(!e.target.checked) {\n            let index = props.selected.indexOf(e.target.value)\n            props.selected.splice(index, 1)\n        }\n\n        props.selected.map((item, index) => {\n            refinedArray.push(...eval(`${item}Orders`))\n        })\n\n        props.updateOrders(refinedArray)\n    }\n\n\n    return(\n        <div className={classes.MainContainer}>\n            <div className={classes.LeftSection}>\n                <nav className={classes.FilterMenuContainers}>\n                    <span className={classes.FilterMenus}>Filters</span>\n                    <span className={classes.FilterMenus}>Count: {props.toRender.length}</span>\n                    <label className={classes.FilterContainer}>\n                        <input onChange={(e) => {\n                            handleChange(e)\n                        }} className={`${classes.FilterMenus} ${classes.Filters}`} type={'checkbox'} defaultChecked={true} name=\"filter-orders\" value=\"new\" />New\n                    </label>\n                    <label className={classes.FilterContainer}>\n                        <input onChange={(e) => {\n                            handleChange(e)\n                        }} className={`${classes.FilterMenus} ${classes.Filters}`} type={'checkbox'} defaultChecked={true} name=\"filter-orders\" value=\"packed\" />Packed\n                    </label>\n                    <label className={classes.FilterContainer}>\n                        <input onChange={(e) => {\n                            handleChange(e)\n                        }} className={`${classes.FilterMenus} ${classes.Filters}`} type={'checkbox'} defaultChecked={true} name=\"filter-orders\" value=\"intransit\" />InTransit\n                    </label>\n                    <label className={classes.FilterContainer}>\n                        <input onChange={(e) => {\n                            handleChange(e)\n                        }} className={`${classes.FilterMenus} ${classes.Filters}`} type={'checkbox'} defaultChecked={true} name=\"filter-orders\" value=\"delivered\" />Delivered\n                    </label>\n                </nav>\n            </div>\n            <div className={classes.RightSection}>\n                <OrderListing {...props}/>\n            </div>\n        </div>\n    )\n}\n\nlet getDataFromGlobalStore = (globalStore) => {\n    return globalStore.orders\n}\n\nlet updateGlobalStoreData = (dispatch) => {\n    return{\n        updateOrders: (data) => dispatch({\n            type: 'REFINED ORDERS',\n            data: data\n        })\n    }\n}\n\nexport default connect(getDataFromGlobalStore, updateGlobalStoreData)(Orders)","import React from 'react'\nimport classes from './OrderListing.module.css'\nimport {connect} from \"react-redux\";\n\n\nconst OrderListing = (props) => {\n\n    const selectedOrder = (order) => {\n        props.updateOrder(order)\n        props.history.push('/order')\n    }\n\n    const renderOrder = (order) => {\n        return(\n            <tr onClick={(e) => selectedOrder(order)} className={classes.TableRows}>\n                <td className={classes.RowDataEntries}>{order.id}</td>\n                <td className={classes.RowDataEntries}>{order.customerName}</td>\n                <td className={classes.RowDataEntries}>{order.orderDate}</td>\n                <td className={classes.RowDataEntries}>{`$${order.amount}`}</td>\n                <td className={classes.RowDataEntries}>{order.orderStatus}</td>\n            </tr>\n        )\n    }\n\n    return(\n        <div className={classes.MainContainer}>\n            <table className={classes.Table}>\n                <tr className={classes.HeadingRow}>\n                    <th className={classes.TableHeadings}>ID</th>\n                    <th className={classes.TableHeadings}>Customer</th>\n                    <th className={classes.TableHeadings}>Date</th>\n                    <th className={classes.TableHeadings}>Amount</th>\n                    <th className={classes.TableHeadings}>Status</th>\n                </tr>\n                {\n                    props.toRender.map((order) => {\n                        return renderOrder(order)\n                    })\n                }\n            </table>\n        </div>\n    )\n}\n\nlet updateGlobalStoreData = (dispatch) => {\n    return{\n        updateOrder: (data) => dispatch({\n            type: 'UPDATE ACTIVE ORDER',\n            data: data\n        })\n    }\n}\n\nexport default connect('',updateGlobalStoreData)(OrderListing)","import React from 'react'\nimport classes from './ProductListing.module.css'\nimport { connect } from 'react-redux'\n\n\nconst ProductListing = (props) => {\n\n    let refinedProducts = []\n    props.selected.map((product) => {\n        let tempArray = eval(`props.${product}`)\n        refinedProducts.push(...tempArray)\n    })\n\n    refinedProducts.push(...props.unFiltered)\n\n    refinedProducts.pop()\n    refinedProducts.pop()\n\n    // props.selected.change(() => {\n    //     props.refinedProducts(refinedProducts)\n    // })\n\n    const selectedProduct = (product) => {\n        props.updateProduct(product)\n        props.history.push('/product')\n    }\n\n    const renderProducts = (product) => {\n        return(\n            <tr onClick={(product) => selectedProduct(product)} className={classes.TableRows}>\n                <td className={classes.RowDataEntries}>{product.id}</td>\n                <td className={classes.RowDataEntries}>{product.medicineName}</td>\n                <td className={classes.RowDataEntries}>{product.medicineBrand}</td>\n                <td className={classes.RowDataEntries}>{product.expiryDate}</td>\n                <td className={classes.RowDataEntries}>{`$${product.unitPrice}`}</td>\n                <td className={classes.RowDataEntries}>{product.stock}</td>\n            </tr>\n        )\n    }\n\n    return(\n        <div className={classes.MainContainer}>\n            <table className={classes.Table}>\n                <tr className={classes.HeadingRow}>\n                    <th className={classes.TableHeadings}>ID</th>\n                    <th className={classes.TableHeadings}>Product Name</th>\n                    <th className={classes.TableHeadings}>Product Brand</th>\n                    <th className={classes.TableHeadings}>Expiry Date</th>\n                    <th className={classes.TableHeadings}>Unit Price</th>\n                    <th className={classes.TableHeadings}>Stock</th>\n                </tr>\n                {\n                    props.toRender.map((product) => {\n                        return renderProducts(product)\n                    })\n                }\n            </table>\n        </div>\n    )\n}\n\nlet updateGlobalStoreData = (dispatch) => {\n    return{\n        refinedProducts: (data) => dispatch({\n            type: 'REFINED PRODUCTS',\n            data: data\n        }),\n        updateProduct: (data) => dispatch({\n            type: 'UPDATE ACTIVE PRODUCT',\n            data: data\n        })\n    }\n}\n\nexport default connect('',updateGlobalStoreData)(ProductListing)","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MainContainer\":\"ProductDetails_MainContainer__2L3bz\",\"MainTitle\":\"ProductDetails_MainTitle__1cfDR\",\"DetailsField\":\"ProductDetails_DetailsField__1YlPq\",\"DetailsTitle\":\"ProductDetails_DetailsTitle__3-1xh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MainContainer\":\"ProductDetail_MainContainer__22o9G\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MainContainer\":\"OrderDetail_MainContainer__3Tf5a\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MainContainer\":\"OrderDetails_MainContainer__1gO2j\",\"MainTitle\":\"OrderDetails_MainTitle__3LveB\",\"DetailsField\":\"OrderDetails_DetailsField__1NtNF\",\"DetailsTitle\":\"OrderDetails_DetailsTitle__356em\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MainContainer\":\"Orders_MainContainer__2oIJG\",\"LeftSection\":\"Orders_LeftSection__GnG-2\",\"FilterMenuContainers\":\"Orders_FilterMenuContainers__1lclm\",\"FilterMenus\":\"Orders_FilterMenus__2T015\",\"Filters\":\"Orders_Filters__ABpiG\",\"RightSection\":\"Orders_RightSection__3JZwj\",\"FilterContainer\":\"Orders_FilterContainer__2M-Ca\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MainContainer\":\"UserListing_MainContainer__JSR6K\",\"Table\":\"UserListing_Table__VBOmE\",\"HeadingRow\":\"UserListing_HeadingRow__CGj_E\",\"TableHeadings\":\"UserListing_TableHeadings__2vZfa\",\"RowDataEntries\":\"UserListing_RowDataEntries__83jdM\"};","import React from 'react'\nimport classes from './ButtonGenerator.module.css'\nimport { connect } from 'react-redux'\n\nconst ButtonGenerator = (props) => {\n\n    const handleClick = (e) => {\n        e.preventDefault()\n\n        switch (props.BtnTitle) {\n            case \"LOGOUT\": {\n                props.updateLogin()\n                console.log(props)\n                props.history.push('/')\n                break;\n            }\n        }\n    }\n\n    return(\n        <button onClick={(e) => handleClick(e)} className={classes.MainContainer} type={props.BtnType} name={props.BtnTitle}>\n            {props.BtnTitle}\n        </button>\n    )\n}\n\nlet getDataFromGlobalStore = (globalStore) => {\n    return globalStore.login\n}\n\nlet updateGlobalStoreData = (dispatch) => {\n    return{\n        updateLogin: () => dispatch({\n            type: \"UPDATE LOGIN STATUS\"\n        })\n    }\n}\n\nexport default connect('',updateGlobalStoreData)(ButtonGenerator)","import React from 'react'\nimport classes from './Header.module.css'\n\nimport { connect } from 'react-redux'\nimport ButtonGenerator from \"../../Components/Button Generator/ButtonGenerator\";\n\nclass Header extends React.Component {\n\n    state = {\n        active: 'orders'\n    }\n\n    updateActive = (e) => {\n        if(this.props.loginStatus == false) {\n            alert('Please Login To Continue')\n            this.props.history.push(`/`)\n        } else {\n            let active = e.target.innerText.toLowerCase()\n            this.setState({\n                active: active\n            })\n            this.props.history.push(`/${active}`)\n        }\n    }\n\n    handleLogin = () => {\n        let loginStatus = localStorage.getItem(JSON.parse('userCredentials'))\n\n        if(loginStatus == undefined || loginStatus == null) {\n            this.props.history.push(`/`)\n        }\n    }\n\n    render() {\n        return(\n            <div className={classes.MainContainer}>\n                <div className={classes.LeftContainer}>\n                    <nav className={classes.LogoContainer}>\n                        <img className={classes.Logo} src='https://raw.githubusercontent.com/infiniteBRUTAL/Kafene-assessment/main/assets/Kafene_logo.png' alt={'Logo'} />\n                    </nav>\n                    <span className={classes.LogoName}>Kafene</span>\n                </div>\n                <div className={classes.MenuContainer}>\n                    <span onClick={(e) => this.updateActive(e)} className={`${classes.MenuItems} ${this.state.active == 'orders' ? classes.Active : null}`} >Orders</span>\n                    <span onClick={(e) => this.updateActive(e)} className={`${classes.MenuItems} ${this.state.active == 'products' ? classes.Active : null}`} >Products</span>\n                    <span onClick={(e) => this.updateActive(e)} className={`${classes.MenuItems} ${this.state.active == 'users' ? classes.Active : null}`} >Users</span>\n                </div>\n                <div onClick={(e) => {\n                    this.handleLogin(e)\n                }} className={classes.RightContainer}>\n                    <ButtonGenerator {...this.props} BtnTitle={`${this.props.loginStatus == false ? 'LOGOUT' : 'LOGIN'}`} BtnType={`${this.props.loginStatus == false ? 'LOGIN' : 'LOGOUT'}`}/>\n                </div>\n            </div>\n        )\n    }\n}\n\nlet getDataFromGlobalStore = (globalStore) => {\n    return globalStore.login\n}\n\n\nexport default connect(getDataFromGlobalStore)(Header)","import React from 'react'\nimport classes from './LoginForm.module.css'\nimport ButtonGenerator from \"../Button Generator/ButtonGenerator\";\nimport { connect } from 'react-redux'\n\n\nconst LoginForm = (props) => {\n\n    let username = ''\n    let password = ''\n\n    const handleInput = (e) => {\n        switch(e.target.name) {\n            case 'Username': {\n                username = e.target.value\n                return;\n            }\n            case 'Password': {\n                password = e.target.value\n                return;\n            }\n            default: {\n                return\n            }\n        }\n    }\n\n    const handleLogin = () => {\n        if(username == password && username != '') {\n            alert('Login Successfull')\n            props.updateLoginStatus()\n            props.updateLogin()\n            props.history.push('/orders')\n        } else {\n            alert('Please Check Username and Password')\n        }\n    }\n\n    return(\n        <div className={classes.MainContainer}>\n            <form className={classes.LoginForm}>\n                <input onChange={(e) => {\n                    handleInput(e)\n                }} className={classes.FormInputFields} type={'text'} placeholder={'Please Enter Your Username'} name={'Username'}/>\n                <input onChange={(e) => {\n                    handleInput(e)\n                }} className={classes.FormInputFields} type={'password'} placeholder={'Please Enter Your Password'} name={'Password'}/>\n                <div onClick={(e) => handleLogin()} className={classes.BtnContainer}>\n                    <ButtonGenerator updateLoginStatus={props.updateLoginStatus} BtnType={'LOGIN'} BtnTitle={'LOGIN'} />\n                </div>\n            </form>\n        </div>\n    )\n}\n\nlet updateGlobalStoreData = (dispatch) => {\n    return{\n        updateLogin: () => dispatch({\n            type: \"UPDATE LOGIN STATUS\"\n        })\n    }\n}\n\nexport default connect('', updateGlobalStoreData)(LoginForm)","import React from 'react'\nimport classes from './Login.module.css'\nimport LoginForm from \"../../Components/Login Form/LoginForm\";\nimport SignUpForm from \"../../Components/SignUp Form/SignUpForm\";\n\n\nconst Login = (props) => {\n\n    let [active, updateActive] = React.useState('login')\n\n    const handleActiveForm = (active) => {\n        updateActive(active)\n    }\n\n    return(\n        <div className={classes.MainContainer}>\n            <div className={classes.SubContainer}>\n                <div className={classes.FormSelector}>\n                    <span onClick={(e) => {\n                        handleActiveForm('login')\n                    }} className={`${classes.FormNames} ${active === 'login' ? classes.ActiveForm : null}`}>Login</span>\n                    {/*<span onClick={(e) => {*/}\n                    {/*    handleActiveForm('signup')*/}\n                    {/*}} className={`${classes.FormNames} ${active === 'login' ? classes.ActiveForm : null}`}>Sign Up</span>*/}\n                </div>\n                <div className={classes.FormContainer}>\n                    <LoginForm updateLoginStatus={props.updateLoginStatus} {...props}/>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Login","import React from 'react'\nimport classes from './Products.module.css'\nimport { connect } from 'react-redux'\nimport ProductListing from \"../../Components/Product Listing/ProductListing\";\n\n\nconst Products = (props) => {\n\n    const handleClick = (target) => {\n        if(props.selected.includes(target.value)) {\n            let index = props.selected.indexOf(target.value)\n            props.selected.splice(index, 1)\n        } else {\n            let tempSelected = props.selected\n            tempSelected.push(target.value)\n            props.updateSelected(tempSelected)\n        }\n\n        console.log(props)\n    }\n\n    return(\n        <div className={classes.MainContainer}>\n            <div className={classes.LeftSection}>\n                <nav className={classes.FilterMenuContainers}>\n                    <span className={classes.FilterMenus}>Filters</span>\n                    <span className={classes.FilterMenus}>Count: {props.toRender.length}</span>\n                    <label className={classes.FilterContainer}>\n                        <input onClick={(e) => {\n                            handleClick(e.target)\n                        }} className={`${classes.FilterMenus} ${classes.Filters}`} type={'checkbox'} defaultChecked={true} name=\"filter-orders\" value=\"expired\" />Expired\n                    </label>\n                    <label className={classes.FilterContainer}>\n                        <input onClick={(e) => {\n                            handleClick(e.target)\n                        }} className={`${classes.FilterMenus} ${classes.Filters}`} type={'checkbox'} defaultChecked={true} name=\"filter-orders\" value=\"lowStock\" />Low Stock\n                    </label>\n                </nav>\n            </div>\n            <div className={classes.RightSection}>\n                <ProductListing {...props} />\n            </div>\n        </div>\n    )\n}\n\nlet getDataFromGlobalStore = (globalStore) => {\n    return globalStore.products\n}\n\nlet updateGlobalStoreData = (dispatch) => {\n    return {\n        updateSelected: (data) => dispatch({\n            type: \"UPDATE SELECTION\",\n            data: data\n        })\n\n    }\n}\n\nexport default connect(getDataFromGlobalStore, updateGlobalStoreData)(Products)","import React from 'react'\nimport classes from './UserListing.module.css'\n\n\nconst UserListing = (props) => {\n\n    const renderUser = (user) => {\n\n        return(\n            <tr className={classes.TableRows}>\n                <td className={classes.RowDataEntries}>{user.id}</td>\n                <td className={classes.RowDataEntries}>\n                    <img className={classes.UserAvatar} src={user.profilePic} />\n                </td>\n                <td className={classes.RowDataEntries}>{user.fullName}</td>\n                <td className={classes.RowDataEntries}>{user.dob}</td>\n                <td className={classes.RowDataEntries}>{user.gender}</td>\n                <td className={classes.RowDataEntries}>{user.currentCity + ', ' + user.currentCountry}</td>\n            </tr>\n        )\n    }\n\n    return(\n        <div className={classes.MainContainer}>\n            <table className={classes.Table}>\n                <tr className={classes.HeadingRow}>\n                    <th className={classes.TableHeadings}>ID</th>\n                    <th className={classes.TableHeadings}>User Avatar</th>\n                    <th className={classes.TableHeadings}>Full Name</th>\n                    <th className={classes.TableHeadings}>DOB</th>\n                    <th className={classes.TableHeadings}>Gender</th>\n                    <th className={classes.TableHeadings}>Current Location</th>\n                </tr>\n                {\n                    props.toRender.map((user) => {\n                        return renderUser(user)\n                    })\n                }\n            </table>\n        </div>\n    )\n}\n\nexport default UserListing","import React from 'react'\nimport classes from './SearchFilter.module.css'\nimport ButtonGenerator from \"../Button Generator/ButtonGenerator\";\nimport { connect } from 'react-redux'\n\nconst SearchFilter = (props) => {\n\n    const [search, updateSearch] = React.useState('')\n\n    let searchField = document.getElementsByTagName('input')[0]\n\n    const handleSearch = (e) => {\n        updateSearch(e.target.value)\n\n        e.preventDefault()\n\n        if(e.keyCode == 13) {\n            if(e.target.value.length < 2) {\n\n                alert('Please Enter Atleast 2 characters')\n                searchField.value = ''\n                updateSearch('')\n                props.refinedUsers(props.data)\n                return\n            }\n\n            let refinedArray = props.data.filter((user) => {\n                if(user.fullName.toLowerCase().includes(e.target.value.toLowerCase())) {\n                    return user\n                }\n            })\n\n            props.refinedUsers(refinedArray)\n        }\n\n\n    }\n\n    const handleReset = (e) => {\n        e.preventDefault()\n        searchField.value = ''\n        props.refinedUsers(props.data)\n    }\n\n    // document.addEventListener('keydown', (e) => {\n    //     if(e.keyCode === 13) {\n    //         if(e.target.value.length < 2) {\n    //             alert('Please enter atleast 2 characters')\n    //         } else if(e.target.value.length > 1 && e.keyCode === 13){\n    //             handleSearch(e)\n    //         }\n    //     }\n    // })\n\n    return(\n        <div className={classes.MainContainer}>\n            <div className={classes.SearchField}>\n                <input onKeyUp={(e) => handleSearch(e)} className={classes.InputField} type={'text'} placeholder={'Search through Users'} />\n            </div>\n            <div onClick={(e) => handleReset(e)} className={classes.ButtonContainer}>\n                <ButtonGenerator BtnType={\"SEARCH\"} BtnTitle={'RESET'}/>\n            </div>\n        </div>\n    )\n}\n\nlet getDataFromGlobalStore = (globalStore) => {\n    return globalStore.users\n}\n\nlet updateGlobalStoreData = (dispatch) => {\n    return{\n        refinedUsers: (data) => dispatch({\n            type: 'REFINED USERS',\n            data: data\n        })\n    }\n}\n\nexport default connect(getDataFromGlobalStore, updateGlobalStoreData)(SearchFilter)","import React from 'react'\nimport classes from './Users.module.css'\nimport { connect } from 'react-redux'\nimport UserListing from \"../../Components/User Listing/UserListing\";\nimport SearchFilter from \"../../Components/Search Filter/SearchFilter\";\n\n\nconst Users = (props) => {\n\n    return(\n        <div className={classes.MainContainer}>\n            <div className={classes.TopSection}>\n                <SearchFilter {...props}/>\n            </div>\n            <div className={classes.BottomSection}>\n                <UserListing {...props} />\n            </div>\n        </div>\n    )\n}\n\nlet getDataFromGlobalStore = (globalStore) => {\n    return globalStore.users\n}\n\nexport default connect(getDataFromGlobalStore)(Users)","import React from \"react\";\nimport classes from './Loader.module.css'\nimport { connect } from 'react-redux'\n\n\nconst Loader = (props) => {\n\n    if(props.users.data == undefined || props.products.data == undefined || props.orders.data == undefined) {\n        return(\n            <div className={classes.MainContainer}>\n                <div className={classes.LoadingContainer}>\n                    <span className={classes.LoadingText}>One Moment Please...</span>\n                </div>\n            </div>\n        )\n    }\n    return props.children\n}\n\nlet getDataFromGlobalStore = (globalStore) => {\n    return globalStore\n}\n\nexport default connect(getDataFromGlobalStore)(Loader)","import axios from \"axios\";\n\nexport const getData = async (URL) => {\n    let result = await axios.get(URL)\n        .then((response) => {\n            return response.data\n        })\n    return result\n}","import React from 'react'\nimport classes from './ProductDetails.module.css'\n\n\nconst ProductDetails = (props) => {\n\n    console.log(props.product)\n\n    return(\n        <div className={classes.MainContainer}>\n            <p className={classes.MainTitle}>Product Details</p>\n            <div className={classes.DetailsField}>\n                <span className={classes.DetailsTitle}>Product ID: </span>\n                <span className={classes.Details}>{props.product.id}</span>\n            </div>\n            <div className={classes.DetailsField}>\n                <span className={classes.DetailsTitle}>Product Name: </span>\n                <span className={classes.Details}>{props.product.medicineName}</span>\n            </div>\n            <div className={classes.DetailsField}>\n                <span className={classes.DetailsTitle}>Product Brand: </span>\n                <span className={classes.Details}>{props.product.medicineBrand}</span>\n            </div>\n            <div className={classes.DetailsField}>\n                <span className={classes.DetailsTitle}>Expiry Date: </span>\n                <span className={classes.Details}>{props.product.expiryDate}</span>\n            </div>\n            <div className={classes.DetailsField}>\n                <span className={classes.DetailsTitle}>Product Price: </span>\n                <span className={classes.Details}>{props.product.unitPrice}</span>\n            </div>\n            <div className={classes.DetailsField}>\n                <span className={classes.DetailsTitle}>Product Available Stock: </span>\n                <span className={classes.Details}>{props.product.stock}</span>\n            </div>\n        </div>\n    )\n\n}\n\n\n\nexport default ProductDetails","import React from 'react'\nimport classes from './ProductDetail.module.css'\nimport { connect } from 'react-redux'\nimport ProductDetails from \"../../Components/ProductDetails/ProductDetails\";\n\n\nconst ProductDetail = (props) => {\n\n    return(\n        <div className={classes.MainContainer}>\n            <ProductDetails {...props} />\n        </div>\n    )\n}\n\nlet getDataFromGlobalStore = (globalStore) => {\n    return globalStore.products\n}\n\n\nexport default connect(getDataFromGlobalStore)(ProductDetail)","import React from 'react'\nimport classes from './OrderDetails.module.css'\n\n\nconst OrderDetails = (props) => {\n\n    return(\n        <div className={classes.MainContainer}>\n            <p className={classes.MainTitle}>Order Details</p>\n            <div className={classes.DetailsField}>\n                <span className={classes.DetailsTitle}>Order ID: </span>\n                <span className={classes.Details}>{props.order.id}</span>\n            </div>\n            <div className={classes.DetailsField}>\n                <span className={classes.DetailsTitle}>Customer Name: </span>\n                <span className={classes.Details}>{props.order.customerName}</span>\n            </div>\n            <div className={classes.DetailsField}>\n                <span className={classes.DetailsTitle}>Order Date: </span>\n                <span className={classes.Details}>{props.order.orderDate}</span>\n            </div>\n            <div className={classes.DetailsField}>\n                <span className={classes.DetailsTitle}>Order Time: </span>\n                <span className={classes.Details}>{props.order.orderTime}</span>\n            </div>\n            <div className={classes.DetailsField}>\n                <span className={classes.DetailsTitle}>Order Amount: </span>\n                <span className={classes.Details}>${props.order.amount}</span>\n            </div>\n            <div className={classes.DetailsField}>\n                <span className={classes.DetailsTitle}>Order Status: </span>\n                <span className={classes.Details}>{props.order.orderStatus}</span>\n            </div>\n        </div>\n    )\n\n}\n\n\n\nexport default OrderDetails","import React from 'react'\nimport classes from './OrderDetail.module.css'\nimport { connect } from 'react-redux'\nimport OrderDetails from \"../../Components/Order Details/OrderDetails\";\n\n\nconst ProductDetail = (props) => {\n\n    return(\n        <div className={classes.MainContainer}>\n            <OrderDetails {...props} />\n        </div>\n    )\n}\n\nlet getDataFromGlobalStore = (globalStore) => {\n    return globalStore.orders\n}\n\n\nexport default connect(getDataFromGlobalStore)(ProductDetail)","import React from \"react\";\nimport { Route, BrowserRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\n\nimport './App.css';\nimport Header from \"./Common Components/Header/Header\";\nimport Login from \"./Containers/Login/Login\";\nimport Orders from \"./Containers/Orders/Orders\";\nimport Products from \"./Containers/Products/Products\";\nimport Users from \"./Containers/Users/Users\";\nimport Loader from \"./Components/Loader/Loader\";\nimport {getData} from \"./Utils/Common Method\";\nimport {ORDER_DATA, PRODUCT_DATA, USER_DATA} from \"./Utils/API Endpoints\";\nimport ProductDetail from \"./Containers/Product Details/ProductDetail\";\nimport OrderDetail from \"./Containers/OrderDetail/OrderDetail\";\n\nclass App extends React.Component {\n\n    state = {\n        loginStatus: false\n    }\n\n    updateLoginStatus = () => {\n        this.setState({\n            loginStatus: !this.state.loginStatus\n        })\n    }\n\n    componentDidMount() {\n        getData(PRODUCT_DATA).then((response) => {\n\n            let monthList = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']\n\n            let date = new Date().getDate()\n            let month = new Date().getMonth()\n            let year = new Date().getFullYear()\n\n\n            let expiredData = response.filter((item) => {\n\n                if(date.length == 1) {\n                    date = \"0\" + date\n                }\n\n                let expiryYear = item.expiryDate.split('-')[2]\n                let expiryMonth = item.expiryDate.split('-')[1]\n                let expiryDate = Number(item.expiryDate.split('-')[0])\n\n                // let currentData = `${date}-${month}-${year}`\n\n                monthList.find((month, index) => {\n                    if(month === expiryMonth) {\n                        expiryMonth = index+1\n                    }\n                })\n\n                if(expiryYear < year) {\n                    return item\n                } else if(expiryYear == year && expiryMonth < month) {\n                    return item\n                } else if(expiryYear == year && expiryMonth == month && expiryDate < date) {\n                    return item\n                }\n            })\n\n            let lowStock = response.filter((item) => {\n                if (item.stock < 100) {\n                    return item\n                }\n            })\n\n            let unFilteredData = response.filter((product) => {\n                if(product.stock > 100) {\n\n                    date = String(date)\n\n                    if(date.length == 1) {\n                        date = '0' + date\n                        date = parseInt(date)\n                    }\n\n                    let expiryYear = product.expiryDate.split('-')[2]\n                    let expiryMonth = product.expiryDate.split('-')[1]\n                    let expiryDate = Number(product.expiryDate.split('-')[0])\n\n                    monthList.find((month, index) => {\n                        if(month === expiryMonth) {\n                            expiryMonth = index+1\n                        }\n                    })\n\n                    if(expiryYear > year) {\n                        return product\n                    } else if(expiryYear == year && expiryMonth > month) {\n                        return product\n                    } else if(expiryYear == year && expiryMonth == month && expiryDate > date) {\n                        return product\n                    }\n                }\n            })\n\n            this.props.expiredData(expiredData)\n            this.props.lowStockData(lowStock)\n            this.props.unFilteredData(unFilteredData)\n            this.props.refinedProducts(response)\n            this.props.updateProducts(response)\n        })\n        getData(USER_DATA).then((response) => {\n            this.props.refinedUsers(response)\n            this.props.updateUsers(response)\n        })\n        getData(ORDER_DATA).then((response) => {\n            this.props.refinedOrders(response)\n            this.props.updateOrders(response)\n        })\n    }\n\n    render() {\n        return(\n            <BrowserRouter>\n                <Route path={'/'} render={(props) => <Header {...props} /> } />\n                <div className={'App'}>\n                    <Loader isLoaded={this.props}>\n                        <Route exact path={'/'} render={(props) => <Login updateLoginStatus={this.updateLoginStatus} {...props} />} />\n                        <Route exact path={'/orders'} render={(props) => <Orders {...props} />} />\n                        <Route exact path={'/products'} render={(props) => <Products {...props} />} />\n                        <Route exact path={'/users'} render={(props) => <Users {...props} />} />\n                        <Route exact path={'/product'} render={(props) => <ProductDetail {...props} />} />\n                        <Route exact path={'/order'} render={(props) => <OrderDetail {...props} />} />\n                    </Loader>\n                </div>\n            </BrowserRouter>\n        )\n    }\n}\n\nlet getDataFromGlobalStore = (globalStore) => {\n    return globalStore\n}\n\nlet updateGlobalStoreData = (dispatch) => {\n    return {\n        updateProducts: (data) => dispatch({\n            type: \"PRODUCT DATA\",\n            data: data\n        }),\n        updateUsers: (data) => dispatch({\n            type: \"USER DATA\",\n            data: data\n        }),\n        updateOrders: (data) => dispatch({\n            type: \"ORDER DATA\",\n            data: data\n        }),\n        refinedProducts: (data) => dispatch({\n            type: \"REFINED PRODUCTS\",\n            data: data\n        }),\n        refinedUsers: (data) => dispatch({\n            type: \"REFINED USERS\",\n            data: data\n        }),\n        refinedOrders: (data) => dispatch({\n            type: \"REFINED ORDERS\",\n            data: data\n        }),\n        expiredData: (data) => dispatch({\n            type: \"EXPIRED\",\n            data: data\n        }),\n        lowStockData: (data) => dispatch({\n            type: \"LOW STOCK\",\n            data: data\n        }),\n        unFilteredData: (data) => dispatch({\n            type: \"UNFILTERED DATA\",\n            data: data\n        })\n    }\n}\n\nexport default connect(getDataFromGlobalStore, updateGlobalStoreData)(App);","export const PRODUCT_DATA = 'https://5f01721007605200169e6fd4.mockapi.io/kafene-project-products'\nexport const ORDER_DATA = 'https://5f01721007605200169e6fd4.mockapi.io/kafene-project-orders'\nexport const USER_DATA = 'https://5f01721007605200169e6fd4.mockapi.io/kafene-project-user-listing'","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const initialState = {\n    selected: ['new', 'packed', 'intransit', 'delivered']\n}\n\nexport const Order_Reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case 'ORDER DATA':\n            return {...state, data: action.data}\n        case 'REFINED ORDERS':\n            return {...state, toRender: action.data}\n        case 'UPDATE SELECTED':\n            return {...state, selected: action.data}\n        case 'UPDATE ACTIVE ORDER':\n            return {...state, order: action.data}\n        default:\n            return {...state}\n    }\n}","const initialState = {\n    selected: ['expired', 'lowStock']\n}\n\nexport const Product_Reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case 'PRODUCT DATA':\n            return {...state, data: action.data}\n        case 'REFINED PRODUCTS':\n            return {...state, toRender: action.data}\n        case 'EXPIRED':\n            return {...state, expired: action.data}\n        case 'LOW STOCK':\n            return {...state, lowStock: action.data}\n        case 'UNFILTERED DATA':\n            return {...state, unFiltered: action.data}\n        case 'UPDATE SELECTION':\n            return {...state, selected: action.data}\n        case 'UPDATE ACTIVE PRODUCT':\n            return {...state, product: action.data}\n        default:\n            return {...state}\n    }\n}","const initialState = {\n}\n\nexport const User_Reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case 'USER DATA':\n            return {...state, data: action.data}\n        case 'REFINED USERS':\n            return {...state, toRender: action.data}\n        default:\n            return {...state}\n    }\n}","const initialState = {\n    loginStatus: false\n}\n\nexport const Login_Reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case 'UPDATE LOGIN STATUS':\n            return {...state, loginStatus: !state.loginStatus}\n        default:\n            return {...state}\n    }\n}","import { combineReducers } from 'redux'\nimport { Order_Reducer } from \"./OrderReducer\";\nimport { Product_Reducer } from \"./ProductReducer\";\nimport { User_Reducer } from \"./UserReducer\";\nimport {Login_Reducer} from \"./LoginReducer\";\n\nexport const Global_Reducer = combineReducers({\n    login: Login_Reducer,\n    products: Product_Reducer,\n    users: User_Reducer,\n    orders: Order_Reducer\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux'\nimport { createStore } from \"redux\";\nimport { Global_Reducer } from \"./Reducers/GlobalReducer\";\n\nlet globalStore = createStore(Global_Reducer)\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={globalStore}>\n        <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}